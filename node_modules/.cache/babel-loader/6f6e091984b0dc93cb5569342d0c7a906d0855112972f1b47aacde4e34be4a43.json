{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/gu997/testmk/my-extension/src/Form.tsx\",\n  _s = $RefreshSig$();\n/*import React, { useState } from \"react\";\n\nconst FormExample = () => {\n  const [inputText, setInputText] = useState(\"\");\n\n  const handleButtonClick = () => {\n    if (inputText === \"あいうえお\") {\n      // 送信処理\n      console.log(\"送信処理\");\n    } else {\n      setInputText(\"あいうえお\");\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputText(event.target.value);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={inputText} onChange={handleInputChange} />\n      <button onClick={handleButtonClick}>ボタン</button>\n    </div>\n  );\n};\n\nexport default FormExample;*/\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextAreaForm = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [inputText, setInputText] = useState(\"\");\n  const [savedLines, setSavedLines] = useState([]);\n  const [divHeight, setDivHeight] = useState(0);\n  const textareaRef = useRef(null);\n  const divRef = useRef(null);\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n  const handleSave = () => {\n    const lines = text.split(\"\\n\");\n    setSavedLines(lines);\n    setText(\"\");\n  };\n  const handleLineClick = line => {\n    if (inputText === line) {\n      // 送信処理\n      console.log(line);\n      setInputText(\"\");\n    } else {\n      setInputText(line);\n    }\n  };\n  const handleInputChange = event => {\n    setInputText(event.target.value);\n  };\n  useEffect(() => {\n    const handleResize = () => {\n      const divElement = divRef.current;\n      if (divElement) {\n        const rect = divElement.getBoundingClientRect();\n        setDivHeight(rect.height);\n      }\n    };\n    window.addEventListener(\"resize\", handleResize);\n    handleResize(); // 初回描画時にも高さを取得\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  const calculatedHeight = divHeight - 300;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      zIndex: \"1000\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textareaRef,\n      value: text,\n      onChange: handleChange,\n      rows: 5,\n      cols: 30,\n      style: {\n        width: \"100%\",\n        height: \"80px\",\n        resize: \"none\",\n        boxSizing: \"border-box\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"\\u4FDD\\u5B58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputText,\n      onChange: handleInputChange,\n      style: {\n        width: \"100%\",\n        backgroundColor: \"white\",\n        overflowX: \"hidden\",\n        overflowY: \"scroll\",\n        boxSizing: \"border-box\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: divRef,\n      style: {\n        width: \"100%\",\n        height: `${calculatedHeight}px`,\n        backgroundColor: \"white\",\n        overflowX: \"hidden\",\n        overflowY: \"scroll\",\n        cursor: \"default\"\n      },\n      children: savedLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => handleLineClick(line),\n        children: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(TextAreaForm, \"222i0GmTUREqKMtJ+jFdo9wsMqs=\");\n_c = TextAreaForm;\nexport default TextAreaForm;\nvar _c;\n$RefreshReg$(_c, \"TextAreaForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","TextAreaForm","_s","text","setText","inputText","setInputText","savedLines","setSavedLines","divHeight","setDivHeight","textareaRef","divRef","handleChange","event","target","value","handleSave","lines","split","handleLineClick","line","console","log","handleInputChange","handleResize","divElement","current","rect","getBoundingClientRect","height","window","addEventListener","removeEventListener","calculatedHeight","style","position","zIndex","children","ref","onChange","rows","cols","width","resize","boxSizing","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","backgroundColor","overflowX","overflowY","cursor","map","index","_c","$RefreshReg$"],"sources":["/mnt/c/Users/gu997/testmk/my-extension/src/Form.tsx"],"sourcesContent":["/*import React, { useState } from \"react\";\n\nconst FormExample = () => {\n  const [inputText, setInputText] = useState(\"\");\n\n  const handleButtonClick = () => {\n    if (inputText === \"あいうえお\") {\n      // 送信処理\n      console.log(\"送信処理\");\n    } else {\n      setInputText(\"あいうえお\");\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputText(event.target.value);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={inputText} onChange={handleInputChange} />\n      <button onClick={handleButtonClick}>ボタン</button>\n    </div>\n  );\n};\n\nexport default FormExample;*/\n\nimport React, { useState, useRef, useEffect } from \"react\";\n\nconst TextAreaForm = () => {\n  const [text, setText] = useState(\"\");\n  const [inputText, setInputText] = useState(\"\");\n  const [savedLines, setSavedLines] = useState<string[]>([]);\n  const [divHeight, setDivHeight] = useState(0);\n\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const divRef = useRef<HTMLDivElement>(null);\n\n  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(event.target.value);\n  };\n\n  const handleSave = () => {\n    const lines = text.split(\"\\n\");\n    setSavedLines(lines);\n    setText(\"\");\n  };\n\n  const handleLineClick = (line: string) => {\n    if (inputText === line) {\n      // 送信処理\n      console.log(line);\n      setInputText(\"\");\n    } else {\n      setInputText(line);\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputText(event.target.value);\n  };\n\n  useEffect(() => {\n    const handleResize = () => {\n      const divElement = divRef.current;\n      if (divElement) {\n        const rect = divElement.getBoundingClientRect();\n        setDivHeight(rect.height);\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize(); // 初回描画時にも高さを取得\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const calculatedHeight = divHeight - 300;\n\n  return (\n    <div style={{ position: \"relative\", zIndex: \"1000\" }}>\n      <textarea\n        ref={textareaRef}\n        value={text}\n        onChange={handleChange}\n        rows={5}\n        cols={30}\n        style={{\n          width: \"100%\",\n          height: \"80px\",\n          resize: \"none\",\n          boxSizing: \"border-box\",\n        }}\n      />\n      <button onClick={handleSave}>保存</button>\n      <input\n        type=\"text\"\n        value={inputText}\n        onChange={handleInputChange}\n        style={{\n          width: \"100%\",\n          backgroundColor: \"white\",\n          overflowX: \"hidden\",\n          overflowY: \"scroll\",\n          boxSizing: \"border-box\",\n        }}\n      />\n      <div\n        ref={divRef}\n        style={{\n          width: \"100%\",\n          height: `${calculatedHeight}px`,\n          backgroundColor: \"white\",\n          overflowX: \"hidden\",\n          overflowY: \"scroll\",\n          cursor: \"default\",\n        }}\n      >\n        {savedLines.map((line, index) => (\n          <p key={index} onClick={() => handleLineClick(line)}>\n            {line}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TextAreaForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}