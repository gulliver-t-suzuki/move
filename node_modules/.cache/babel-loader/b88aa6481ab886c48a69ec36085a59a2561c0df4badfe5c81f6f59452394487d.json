{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/gu997/testmk/my-extension/src/Form.tsx\",\n  _s = $RefreshSig$();\n/*import React, { useState } from \"react\";\n\nconst FormExample = () => {\n  const [inputText, setInputText] = useState(\"\");\n\n  const handleButtonClick = () => {\n    if (inputText === \"あいうえお\") {\n      // 送信処理\n      console.log(\"送信処理\");\n    } else {\n      setInputText(\"あいうえお\");\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputText(event.target.value);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={inputText} onChange={handleInputChange} />\n      <button onClick={handleButtonClick}>ボタン</button>\n    </div>\n  );\n};\n\nexport default FormExample;*/\n\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextAreaForm = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [inputText, setInputText] = useState(\"\");\n  const [savedLines, setSavedLines] = useState([]);\n  const textareaRef = useRef(null);\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n  const handleSave = () => {\n    const lines = text.split(\"\\n\").map(line => line.trim() === \"\" ? \"------------\" : line); // 空白以外の要素だけをフィルタリング;\n    setSavedLines(lines);\n  };\n  const handleLineClick = line => {\n    if (inputText === line) {\n      // 送信処理\n      console.log(line);\n      setInputText(\"\");\n    } else {\n      setInputText(line);\n    }\n  };\n  const handleInputChange = event => {\n    setInputText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      zIndex: \"1000\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textareaRef,\n      value: text,\n      onChange: handleChange,\n      rows: 5,\n      cols: 30,\n      style: {\n        width: \"100%\",\n        height: \"80px\",\n        resize: \"none\",\n        boxSizing: \"border-box\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"\\u4FDD\\u5B58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputText,\n      onChange: handleInputChange,\n      style: {\n        width: \"100%\",\n        backgroundColor: \"white\",\n        overflowX: \"hidden\",\n        overflowY: \"scroll\",\n        boxSizing: \"border-box\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"200px\",\n        backgroundColor: \"white\",\n        overflowX: \"hidden\",\n        overflowY: \"scroll\",\n        cursor: \"default\"\n      },\n      children: savedLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => handleLineClick(line),\n        style: {\n          fontSize: \"14px\",\n          borderBottom: \"1px solid #AAA\",\n          margin: 0,\n          padding: \"8px\"\n        },\n        children: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(TextAreaForm, \"Kusq0TE9wFOpQKqdUlABjOH13I0=\");\n_c = TextAreaForm;\nexport default TextAreaForm;\nvar _c;\n$RefreshReg$(_c, \"TextAreaForm\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","TextAreaForm","_s","text","setText","inputText","setInputText","savedLines","setSavedLines","textareaRef","handleChange","event","target","value","handleSave","lines","split","map","line","trim","handleLineClick","console","log","handleInputChange","style","position","zIndex","children","ref","onChange","rows","cols","width","height","resize","boxSizing","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","backgroundColor","overflowX","overflowY","cursor","index","fontSize","borderBottom","margin","padding","_c","$RefreshReg$"],"sources":["/mnt/c/Users/gu997/testmk/my-extension/src/Form.tsx"],"sourcesContent":["/*import React, { useState } from \"react\";\n\nconst FormExample = () => {\n  const [inputText, setInputText] = useState(\"\");\n\n  const handleButtonClick = () => {\n    if (inputText === \"あいうえお\") {\n      // 送信処理\n      console.log(\"送信処理\");\n    } else {\n      setInputText(\"あいうえお\");\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputText(event.target.value);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={inputText} onChange={handleInputChange} />\n      <button onClick={handleButtonClick}>ボタン</button>\n    </div>\n  );\n};\n\nexport default FormExample;*/\n\nimport React, { useState, useRef, useEffect } from \"react\";\n\nconst TextAreaForm = () => {\n  const [text, setText] = useState(\"\");\n  const [inputText, setInputText] = useState(\"\");\n  const [savedLines, setSavedLines] = useState<string[]>([]);\n\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(event.target.value);\n  };\n\n  const handleSave = () => {\n    const lines = text\n      .split(\"\\n\")\n      .map((line) => (line.trim() === \"\" ? \"------------\" : line)); // 空白以外の要素だけをフィルタリング;\n    setSavedLines(lines);\n  };\n\n  const handleLineClick = (line: string) => {\n    if (inputText === line) {\n      // 送信処理\n      console.log(line);\n      setInputText(\"\");\n    } else {\n      setInputText(line);\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputText(event.target.value);\n  };\n\n  return (\n    <div style={{ position: \"relative\", zIndex: \"1000\" }}>\n      <textarea\n        ref={textareaRef}\n        value={text}\n        onChange={handleChange}\n        rows={5}\n        cols={30}\n        style={{\n          width: \"100%\",\n          height: \"80px\",\n          resize: \"none\",\n          boxSizing: \"border-box\",\n        }}\n      />\n      <button onClick={handleSave}>保存</button>\n      <input\n        type=\"text\"\n        value={inputText}\n        onChange={handleInputChange}\n        style={{\n          width: \"100%\",\n          backgroundColor: \"white\",\n          overflowX: \"hidden\",\n          overflowY: \"scroll\",\n          boxSizing: \"border-box\",\n        }}\n      />\n      <div\n        style={{\n          width: \"100%\",\n          height: \"200px\",\n          backgroundColor: \"white\",\n          overflowX: \"hidden\",\n          overflowY: \"scroll\",\n          cursor: \"default\",\n        }}\n      >\n        {savedLines.map((line, index) => (\n          <p\n            key={index}\n            onClick={() => handleLineClick(line)}\n            style={{\n              fontSize: \"14px\",\n              borderBottom: \"1px solid #AAA\",\n              margin: 0,\n              padding: \"8px\",\n            }}\n          >\n            {line}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TextAreaForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}