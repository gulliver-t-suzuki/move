{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/gu997/testmk/my-extension/src/Form.tsx\",\n  _s = $RefreshSig$();\n/*import React, { useState } from \"react\";\n\nconst FormExample = () => {\n  const [inputText, setInputText] = useState(\"\");\n\n  const handleButtonClick = () => {\n    if (inputText === \"あいうえお\") {\n      // 送信処理\n      console.log(\"送信処理\");\n    } else {\n      setInputText(\"あいうえお\");\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputText(event.target.value);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={inputText} onChange={handleInputChange} />\n      <button onClick={handleButtonClick}>ボタン</button>\n    </div>\n  );\n};\n\nexport default FormExample;*/\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextAreaForm = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [inputText, setInputText] = useState(\"\");\n  const [savedLines, setSavedLines] = useState([]);\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n  const handleSave = () => {\n    const lines = text.split(\"\\n\");\n    setSavedLines(lines);\n    setText(\"\");\n  };\n  const handleLineClick = line => {\n    if (inputText === line) {\n      // 送信処理\n      console.log(line);\n      setInputText(\"\");\n    } else {\n      setInputText(line);\n    }\n  };\n  const handleInputChange = event => {\n    setInputText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      zIndex: \"1000\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: handleChange,\n      rows: 5,\n      cols: 30,\n      style: {\n        width: \"100%\",\n        height: \"100px\",\n        resize: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"\\u4FDD\\u5B58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputText,\n      onChange: handleInputChange,\n      style: {\n        width: \"100%\",\n        backgroundColor: \"white\",\n        overflowX: \"hidden\",\n        overflowY: \"scroll\",\n        boxSizing: \"border-box\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        minHeight: \"100px\",\n        backgroundColor: \"white\",\n        overflowX: \"hidden\",\n        overflowY: \"scroll\",\n        cursor: \"default\"\n      },\n      children: savedLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLineClick(line),\n        children: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(TextAreaForm, \"47+cXVgly7sUnUgxH3yXptWb0Sk=\");\n_c = TextAreaForm;\nexport default TextAreaForm;\nvar _c;\n$RefreshReg$(_c, \"TextAreaForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextAreaForm","_s","text","setText","inputText","setInputText","savedLines","setSavedLines","handleChange","event","target","value","handleSave","lines","split","handleLineClick","line","console","log","handleInputChange","style","position","zIndex","children","onChange","rows","cols","width","height","resize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","backgroundColor","overflowX","overflowY","boxSizing","minHeight","cursor","map","index","_c","$RefreshReg$"],"sources":["/mnt/c/Users/gu997/testmk/my-extension/src/Form.tsx"],"sourcesContent":["/*import React, { useState } from \"react\";\n\nconst FormExample = () => {\n  const [inputText, setInputText] = useState(\"\");\n\n  const handleButtonClick = () => {\n    if (inputText === \"あいうえお\") {\n      // 送信処理\n      console.log(\"送信処理\");\n    } else {\n      setInputText(\"あいうえお\");\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputText(event.target.value);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={inputText} onChange={handleInputChange} />\n      <button onClick={handleButtonClick}>ボタン</button>\n    </div>\n  );\n};\n\nexport default FormExample;*/\n\nimport React, { useState } from \"react\";\n\nconst TextAreaForm = () => {\n  const [text, setText] = useState(\"\");\n  const [inputText, setInputText] = useState(\"\");\n  const [savedLines, setSavedLines] = useState<string[]>([]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(event.target.value);\n  };\n\n  const handleSave = () => {\n    const lines = text.split(\"\\n\");\n    setSavedLines(lines);\n    setText(\"\");\n  };\n\n  const handleLineClick = (line: string) => {\n    if (inputText === line) {\n      // 送信処理\n      console.log(line);\n      setInputText(\"\");\n    } else {\n      setInputText(line);\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputText(event.target.value);\n  };\n\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        zIndex: \"1000\",\n      }}\n    >\n      <textarea\n        value={text}\n        onChange={handleChange}\n        rows={5}\n        cols={30}\n        style={{\n          width: \"100%\",\n          height: \"100px\",\n          resize: \"none\",\n        }}\n      />\n      <button onClick={handleSave}>保存</button>\n      <input\n        type=\"text\"\n        value={inputText}\n        onChange={handleInputChange}\n        style={{\n          width: \"100%\",\n          backgroundColor: \"white\",\n          overflowX: \"hidden\",\n          overflowY: \"scroll\",\n          boxSizing: \"border-box\",\n        }}\n      />\n      <div\n        style={{\n          width: \"100%\",\n          minHeight: \"100px\",\n          backgroundColor: \"white\",\n          overflowX: \"hidden\",\n          overflowY: \"scroll\",\n          cursor: \"default\",\n        }}\n      >\n        {savedLines.map((line, index) => (\n          <button key={index} onClick={() => handleLineClick(line)}>\n            {line}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TextAreaForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}