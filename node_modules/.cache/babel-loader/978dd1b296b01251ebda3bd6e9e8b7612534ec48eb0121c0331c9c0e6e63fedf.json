{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/gu997/testmk/my-extension/src/Popup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Popup.css\";\nimport TextAreaForm from \"./Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popup = () => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartPos, setDragStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const handleDragStart = event => {\n    setIsDragging(true);\n    const clickedDiv = event.currentTarget;\n    const rect = clickedDiv.getBoundingClientRect(); // クリックされたdivの座標とサイズを取得\n    const clickX = event.clientX - rect.left; // クリックされたdiv内の相対的なX座標\n    const clickY = event.clientY - rect.top;\n    setDragStartPos({\n      x: clickX,\n      y: clickY\n    });\n  };\n  useEffect(() => {\n    const handleMouseMove = event => {\n      if (isDragging) {\n        const div = document.getElementById(\"draggedDiv\");\n        if (div) {\n          div.style.left = event.clientX - dragStartPos.x + \"px\";\n          div.style.top = event.clientY - dragStartPos.y + \"px\";\n        }\n      }\n    };\n    const handleMouseUp = () => {\n      if (isDragging) {\n        setIsDragging(false);\n      }\n    };\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    document.addEventListener(\"mouseup\", handleMouseUp);\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [isDragging, dragStartPos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"draggedDiv\",\n    className: isDragging ? \"dragging l-popup\" : \"l-popup\",\n    style: {\n      position: \"fixed\",\n      top: \"0\",\n      left: \"0\",\n      width: \"400px\",\n      minHeight: \"300px\",\n      userSelect: isDragging ? \"none\" : \"all\",\n      cursor: isDragging ? \"grabbing\" : \"grab\",\n      zIndex: \"500\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"16px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          width: \"100%\",\n          height: \"100%\"\n        },\n        children: [isDragging ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u30AF\\u30EA\\u30C3\\u30AF\\u4E2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u30AF\\u30EA\\u30C3\\u30AF\\u3055\\u308C\\u3066\\u3044\\u307E\\u305B\\u3093\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(TextAreaForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"0\",\n        width: \"400px\",\n        height: \"300px\",\n        userSelect: isDragging ? \"none\" : \"\",\n        cursor: isDragging ? \"grabbing\" : \"grab\",\n        zIndex: \"600\"\n      },\n      onMouseDown: handleDragStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Popup, \"DeuoRS9Hj3C7QVATgMxxRLNl8qc=\");\n_c = Popup;\nexport default Popup;\n\n/*const Popup = () => {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n\n  const handleDragStart = (event: React.MouseEvent) => {\n    setIsDragging(true);\n    const { clientX, clientY } = event;\n    const offsetX = clientX - position.x;\n    const offsetY = clientY - position.y;\n    setDragOffset({ x: offsetX, y: offsetY });\n  };\n\n  const handleDrag = (event: React.MouseEvent) => {\n    if (!isDragging) return;\n    const { clientX, clientY } = event;\n    setPosition((prevPosition) => ({\n      x: clientX - dragOffset.x,\n      y: clientY - dragOffset.y,\n    }));\n  };\n\n  const handleDragEnd = () => {\n    setIsDragging(false);\n  };\n\n  return (\n    <div\n      className={isDragging ? \"dragging l-popup\" : \"l-popup\"}\n      style={{\n        position: \"fixed\",\n        top: position.y,\n        left: position.x,\n        width: \"400px\",\n        height: \"300px\",\n        userSelect: isDragging ? \"none\" : \"all\",\n        cursor: isDragging ? \"grabbing\" : \"grab\",\n        zIndex: \"500\",\n      }}\n    >\n      <div style={{ padding: \"16px\" }}>\n        <div\n          style={{\n            position: \"relative\",\n            width: \"100%\",\n            height: \"100%\",\n          }}\n        >\n          {isDragging ? <p>クリック中</p> : <p>クリックされていません</p>}\n          <TextAreaForm />\n        </div>\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"0\",\n          width: \"400px\",\n          height: \"300px\",\n          userSelect: isDragging ? \"none\" : \"all\",\n          cursor: isDragging ? \"grabbing\" : \"grab\",\n          zIndex: \"600\",\n        }}\n        onMouseDown={handleDragStart}\n        onMouseMove={handleDrag}\n        onMouseUp={handleDragEnd}\n      ></div>\n    </div>\n  );\n};\n\nexport default Popup;\n*/\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","useState","useEffect","TextAreaForm","jsxDEV","_jsxDEV","Popup","_s","isDragging","setIsDragging","dragStartPos","setDragStartPos","x","y","handleDragStart","event","clickedDiv","currentTarget","rect","getBoundingClientRect","clickX","clientX","left","clickY","clientY","top","handleMouseMove","div","document","getElementById","style","handleMouseUp","addEventListener","removeEventListener","id","className","position","width","minHeight","userSelect","cursor","zIndex","children","padding","height","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","_c","$RefreshReg$"],"sources":["/mnt/c/Users/gu997/testmk/my-extension/src/Popup.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Popup.css\";\nimport TextAreaForm from \"./Form\";\n\nconst Popup = () => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartPos, setDragStartPos] = useState({ x: 0, y: 0 });\n\n  const handleDragStart = (event: React.MouseEvent) => {\n    setIsDragging(true);\n    const clickedDiv = event.currentTarget;\n    const rect = clickedDiv.getBoundingClientRect(); // クリックされたdivの座標とサイズを取得\n    const clickX = event.clientX - rect.left; // クリックされたdiv内の相対的なX座標\n    const clickY = event.clientY - rect.top;\n    setDragStartPos({ x: clickX, y: clickY });\n  };\n\n  useEffect(() => {\n    const handleMouseMove = (event: MouseEvent) => {\n      if (isDragging) {\n        const div = document.getElementById(\"draggedDiv\");\n        if (div) {\n          div.style.left = event.clientX - dragStartPos.x + \"px\";\n          div.style.top = event.clientY - dragStartPos.y + \"px\";\n        }\n      }\n    };\n\n    const handleMouseUp = () => {\n      if (isDragging) {\n        setIsDragging(false);\n      }\n    };\n\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    document.addEventListener(\"mouseup\", handleMouseUp);\n\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [isDragging, dragStartPos]);\n\n  return (\n    <div\n      id=\"draggedDiv\"\n      className={isDragging ? \"dragging l-popup\" : \"l-popup\"}\n      style={{\n        position: \"fixed\",\n        top: \"0\",\n        left: \"0\",\n        width: \"400px\",\n        minHeight: \"300px\",\n        userSelect: isDragging ? \"none\" : \"all\",\n        cursor: isDragging ? \"grabbing\" : \"grab\",\n        zIndex: \"500\",\n      }}\n    >\n      <div style={{ padding: \"16px\" }}>\n        <div\n          style={{\n            position: \"relative\",\n            width: \"100%\",\n            height: \"100%\",\n          }}\n        >\n          {isDragging ? <p>クリック中</p> : <p>クリックされていません</p>}\n          <TextAreaForm />\n        </div>\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"0\",\n          width: \"400px\",\n          height: \"300px\",\n          userSelect: isDragging ? \"none\" : \"\",\n          cursor: isDragging ? \"grabbing\" : \"grab\",\n          zIndex: \"600\",\n        }}\n        onMouseDown={handleDragStart}\n      ></div>\n    </div>\n  );\n};\n\nexport default Popup;\n\n/*const Popup = () => {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n\n  const handleDragStart = (event: React.MouseEvent) => {\n    setIsDragging(true);\n    const { clientX, clientY } = event;\n    const offsetX = clientX - position.x;\n    const offsetY = clientY - position.y;\n    setDragOffset({ x: offsetX, y: offsetY });\n  };\n\n  const handleDrag = (event: React.MouseEvent) => {\n    if (!isDragging) return;\n    const { clientX, clientY } = event;\n    setPosition((prevPosition) => ({\n      x: clientX - dragOffset.x,\n      y: clientY - dragOffset.y,\n    }));\n  };\n\n  const handleDragEnd = () => {\n    setIsDragging(false);\n  };\n\n  return (\n    <div\n      className={isDragging ? \"dragging l-popup\" : \"l-popup\"}\n      style={{\n        position: \"fixed\",\n        top: position.y,\n        left: position.x,\n        width: \"400px\",\n        height: \"300px\",\n        userSelect: isDragging ? \"none\" : \"all\",\n        cursor: isDragging ? \"grabbing\" : \"grab\",\n        zIndex: \"500\",\n      }}\n    >\n      <div style={{ padding: \"16px\" }}>\n        <div\n          style={{\n            position: \"relative\",\n            width: \"100%\",\n            height: \"100%\",\n          }}\n        >\n          {isDragging ? <p>クリック中</p> : <p>クリックされていません</p>}\n          <TextAreaForm />\n        </div>\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"0\",\n          width: \"400px\",\n          height: \"300px\",\n          userSelect: isDragging ? \"none\" : \"all\",\n          cursor: isDragging ? \"grabbing\" : \"grab\",\n          zIndex: \"600\",\n        }}\n        onMouseDown={handleDragStart}\n        onMouseMove={handleDrag}\n        onMouseUp={handleDragEnd}\n      ></div>\n    </div>\n  );\n};\n\nexport default Popup;\n*/\n"],"mappings":"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UAAU;QACpBX,GAAG,EAAE,GAAG;QACRY,KAAK,EAAE,OAAO;QACdO,MAAM,EAAE,OAAO;QACfL,UAAU,EAAE/B,UAAU,GAAG,MAAM,GAAG,EAAE;QACpCgC,MAAM,EAAEhC,UAAU,GAAG,UAAU,GAAG,MAAM;QACxCiC,MAAM,EAAE;MACV,CAAE;MACFQ,WAAW,EAAEnC;IAAgB;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACzC,EAAA,CAhFID,KAAK;AAAA4C,EAAA,GAAL5C,KAAK;AAkFX,eAAeA,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvEA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}