{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/gu997/testmk/my-extension/src/Popup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Popup.css\";\nimport TextAreaForm from \"./Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popup = () => {\n  _s();\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const handleDragStart = event => {\n    setIsDragging(true);\n    const {\n      clientX,\n      clientY\n    } = event;\n    const offsetX = clientX - position.x;\n    const offsetY = clientY - position.y;\n    setDragOffset({\n      x: offsetX,\n      y: offsetY\n    });\n  };\n  const handleDrag = event => {\n    if (!isDragging) return;\n    const {\n      clientX,\n      clientY\n    } = event;\n    setPosition(prevPosition => ({\n      x: clientX - dragOffset.x,\n      y: clientY - dragOffset.y\n    }));\n  };\n  const handleDragEnd = () => {\n    setIsDragging(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"l-popup\",\n    style: {\n      position: \"fixed\",\n      top: position.y,\n      left: position.x,\n      width: \"400px\",\n      height: \"300px\",\n      userSelect: isDragging ? \"none\" : \"all\",\n      cursor: isDragging ? \"grabbing\" : \"grab\",\n      zIndex: \"500\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"fixed\",\n          top: position.y,\n          left: position.x,\n          width: \"400px\",\n          height: \"300px\",\n          userSelect: isDragging ? \"none\" : \"all\",\n          cursor: isDragging ? \"grabbing\" : \"grab\",\n          zIndex: \"500\"\n        },\n        onMouseDown: handleDragStart,\n        onMouseMove: handleDrag,\n        onMouseUp: handleDragEnd,\n        children: [isDragging ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u30AF\\u30EA\\u30C3\\u30AF\\u4E2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u30AF\\u30EA\\u30C3\\u30AF\\u3055\\u308C\\u3066\\u3044\\u307E\\u305B\\u3093\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(TextAreaForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Popup, \"TaBCLobzCQ6kzmBshB0Eg/2nrRc=\");\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","useState","TextAreaForm","jsxDEV","_jsxDEV","Popup","_s","position","setPosition","x","y","isDragging","setIsDragging","dragOffset","setDragOffset","handleDragStart","event","clientX","clientY","offsetX","offsetY","handleDrag","prevPosition","handleDragEnd","className","style","top","left","width","height","userSelect","cursor","zIndex","children","onMouseDown","onMouseMove","onMouseUp","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/mnt/c/Users/gu997/testmk/my-extension/src/Popup.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Popup.css\";\nimport TextAreaForm from \"./Form\";\n\nconst Popup = () => {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n\n  const handleDragStart = (event: React.MouseEvent) => {\n    setIsDragging(true);\n    const { clientX, clientY } = event;\n    const offsetX = clientX - position.x;\n    const offsetY = clientY - position.y;\n    setDragOffset({ x: offsetX, y: offsetY });\n  };\n\n  const handleDrag = (event: React.MouseEvent) => {\n    if (!isDragging) return;\n    const { clientX, clientY } = event;\n    setPosition((prevPosition) => ({\n      x: clientX - dragOffset.x,\n      y: clientY - dragOffset.y,\n    }));\n  };\n\n  const handleDragEnd = () => {\n    setIsDragging(false);\n  };\n\n  return (\n    <div\n      className=\"l-popup\"\n      style={{\n        position: \"fixed\",\n        top: position.y,\n        left: position.x,\n        width: \"400px\",\n        height: \"300px\",\n        userSelect: isDragging ? \"none\" : \"all\",\n        cursor: isDragging ? \"grabbing\" : \"grab\",\n        zIndex: \"500\",\n      }}\n    >\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        <div\n          style={{\n            position: \"fixed\",\n            top: position.y,\n            left: position.x,\n            width: \"400px\",\n            height: \"300px\",\n            userSelect: isDragging ? \"none\" : \"all\",\n            cursor: isDragging ? \"grabbing\" : \"grab\",\n            zIndex: \"500\",\n          }}\n          onMouseDown={handleDragStart}\n          onMouseMove={handleDrag}\n          onMouseUp={handleDragEnd}\n        >\n          {isDragging ? <p>クリック中</p> : <p>クリックされていません</p>}\n          <TextAreaForm />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}